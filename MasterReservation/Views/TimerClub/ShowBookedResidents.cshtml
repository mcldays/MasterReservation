@using System.Web.Hosting
@using MasterReservation.Models
@model object[]

@{
    ViewBag.Title = "Список забронированных слотов";
}

@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/Scripts/jquery-ui-1.12.1.min.js")
@Scripts.Render("~/Scripts/datepicker.js")
@Scripts.Render("~/Scripts/slick.min.js")


@Styles.Render("~/Content/themes/base/jquery-ui.min.css")
@Styles.Render("~/Content/datepicker.css")
@Styles.Render("~/Content/slick/slick.css")
@Styles.Render("~/Content/slick/slick-theme.css")
@Styles.Render("~/Content/ShowBookedResidentsStyles.css")


<div class="main-container">
    <div class="left-wrap">
        <span class="sub-title">
            Выберите дату:
        </span>
        <div id="calendar" class="calendar"></div>
    </div>
    <div class="center-wrap">
        @{
            List<List<int>> workingTimes = (Model[0] as List<List<int>>);
            List<WorkingPlaceModel> places = (Model[1] as List<WorkingPlaceModel>);
            List<BookingModel> bookings = (Model[2] as List<BookingModel>);
            List<ResidentModel> residents = (Model[3] as List<ResidentModel>);
            string[] titleArr = new string[] {"sun","mon","tue","wed","thu","fri","sat"};
            
            int dayOfWeek;
        }
        @for (var i=0;i<titleArr.Length;i++)
        {

            <div class="times title-time-@titleArr[i]">
                @for (var j=workingTimes[i][0];j<workingTimes[i][1];j++)
                {
                    <span class="span-time">@j:00</span>
                }
            </div>
        }

        <div class="slider-places">
            @for (var k=0; k<places.Count;k++)
            {
                string path = HostingEnvironment.ApplicationHost.GetPhysicalPath() + @"\SalonPhoto\" + (places[k].Id);
                DirectoryInfo dirInfo = new DirectoryInfo(path);
                FileInfo[] files = new FileInfo[] { };


                DateTime date = DateTime.Today;
                <div class="slider-card" value="@places[k].Id">
                    <div class="card-head">
                        <a href="WorkingPlacePage/@places[k].Id">
                            @try
                            {
                                files = dirInfo.GetFiles();

                                if (files.Length == 0)
                                {

                                    <img width="100px" height="100px" src="~/Resources/svg/default-place.svg">

                                }

                                byte[] array = File.ReadAllBytes(files[0].FullName);


                                @Html.Raw("<img width='100px' height='100px' src=\"data:image/jpeg;base64,"
                                          + Convert.ToBase64String(array) + "\" />")

                            }
                            catch (Exception e)
                            {
                            
                                <img width="100px" height="100px" src="~/Resources/svg/default-place.svg">

                            }
                        </a>
                        <div class="head-title-text">
                            @for (var h = 0; h < places[k].Offers.Split(',').Length - 1; h++)
                            {
                                <span class="head-title">
                                    @places[k].Offers.Split(',')[h]
                                </span>
                            }
                        </div>
                    </div>

                    @while (date != DateTime.Today.AddDays(14))
                    {

                        dayOfWeek = (int)date.DayOfWeek;
                        List<int> usedTimes = new List<int>();
                        <table class="time-table time-@titleArr[dayOfWeek]" value="@date.ToString("dd-MM-yyyy")">
                            @for (var j = workingTimes[dayOfWeek][0]; j < workingTimes[dayOfWeek][1] - 1; j++)
                            {
                                var overlaps = bookings.Where(t => t.PlaceId == places[k].Id && t.Date == date);
                                List<List<string>> bookedHours = new List<List<string>>();
                                int iUser = 0;
                                foreach (var overlap in overlaps)
                                {
                                    foreach (var overlap2 in overlap.Times.Split(';'))
                                    {
                                        if (overlap2 == "")
                                        {
                                            continue;
                                        }
                                        bookedHours.Add(new List<string>(){overlap2.Split(':')[0], overlap.ResidentId.ToString(), overlap.Id.ToString(), overlap.Name, overlap.Surname});
                                    }

                                }
                                if (!bookedHours.Any())
                                {
                                    <tr>
                                        <td></td>
                                        <td></td>
                                    </tr>
                                    continue;
                                }
                                int rowspan = 0;
                                if (!usedTimes.Contains(j))
                                {
                                    List<string> findedBooking = new List<string>();
                                    foreach (var booked in bookedHours)
                                    {
                                        findedBooking.Add(booked[0]);
                                    }
                                    if (findedBooking.Contains(j.ToString()))
                                    {
                                        int adder = 1;
                                        while (true)
                                        {

                                            if (findedBooking.Contains((j+adder).ToString()))
                                            {
                                                usedTimes.Add(j+adder);
                                                rowspan++;
                                                adder++;
                                            }
                                            else
                                            {
                                                break;
                                            }
                                        }
                                        rowspan++;
                                        ResidentModel resident = residents.FirstOrDefault(t => t.Id.ToString() == bookedHours[iUser][1]);
                                        if (resident == null)
                                        {
                                            <tr>
                                                <td colspan="2" rowspan="@rowspan" class="booked-slot">@bookedHours[iUser][4] @bookedHours[iUser][3]<img src="~/Resources/img/close-modal.png" value="@bookedHours[iUser][2]" class="delete-record viewDialog" /></td>
                                            </tr>
                                        }
                                        else
                                        {
                                            <tr>
                                                <td colspan="2" rowspan="@rowspan" class="booked-slot">@resident.Surname @resident.Name<img src="~/Resources/img/close-modal.png" value="@bookedHours[iUser][2]" class="delete-record viewDialog" /></td>
                                            </tr>
                                        }
                                        
                                    }
                                    
                                        if (rowspan == 0)
                                        {
                                            <tr>
                                                <td></td>
                                                <td></td>
                                            </tr>
                                        }
                                        else
                                        {
                                            rowspan--;
                                            while (rowspan != 0)
                                            {
                                                <tr></tr>
                                            rowspan--;
                                        }
                                    }
                                    iUser++;

                                }

                            }
                        </table>
                        date = date.AddDays(1);
                    }
                    
                </div>
            }
        </div>
    </div>
    <div class="right-wrap">
        <span class="right-title">
            Все рабочие места:
        </span>
        <div class="all-places">
            @foreach (var place in places)
            {
                string path = HostingEnvironment.ApplicationHost.GetPhysicalPath() + @"\SalonPhoto\" + (place.Id);
                DirectoryInfo dirInfo = new DirectoryInfo(path);
                FileInfo[] files = new FileInfo[] { };

                try
                 {
                     files = dirInfo.GetFiles();

                     if (files.Length == 0)
                     {

                         <img value="@place.Id" filtered="false" src="~/Resources/svg/default-place.svg">

                     }

                     byte[] array = File.ReadAllBytes(files[0].FullName);


                     @Html.Raw("<img value='{@place.Id}' filtered='false'  src=\"data:image/jpeg;base64,".Replace("{@place.Id}",place.Id.ToString())
                               + Convert.ToBase64String(array) + "\" />")

                 }
                 catch (Exception e)
                 {
                            
                     <img value="@place.Id" filtered="false" src="~/Resources/svg/default-place.svg">

                 }

            }
        </div>
    </div>
</div>



<script>
 // календарь
    var calendar1 = $('#calendar').datepicker({
        minDate: new Date(),
        toggleSelected: false,
        onRenderCell: function (date, cellType) {

            var currentDate = date.getDate();
            var currentMonth = date.getMonth();
            var currentYear = date.getFullYear();
        },
        onSelect: function onSelect(fd, date, inst) {
            refreshSlots(date);
        }
    }).data('datepicker');


    let filtered = false;
    let filterMemory = [];
    $(".all-places img").on("click",
        function (e) {
            //$(".slider-places").slick('refresh');
            if ($(this).attr("filtered") == "false") {
                let isFiltered = false;
                for (let img of $(".all-places img")) {
                    if (img.getAttribute("filtered") == "true") {
                        isFiltered = true;
                    }
                }
                if (isFiltered) {
                    hideWeek();
                    unfilter();
                }
                let cardCount = $(".slider-card").length;
                for (let i = 0; i < cardCount; i++) {
                    if ($(".slider-card")[i].getAttribute("value") != this.getAttribute("value")) {
                        filterMemory.push([$(".slider-card")[i], i]);
                    }
                }
                filter();
                $(".all-places img").attr("filtered", false);
                showWeek($(this));

                $(this).attr("filtered", true);
            } else {
                hideWeek();
                //$(".slider-places").slick('slickUnfilter');
                unfilter();
                $(".all-places img").attr("filtered", false);
                
                
            }
        }
    );
    var titleArr = ["sun", "mon", "tue", "wed", "thu", "fri", "sat"];
    var titleArrRus = ["Воскресенье", "Понедельник", "Вторник", "Среда", "Четверг", "Пятница", "Суббота"];
    var mounthsArrRus = [
        "Января", "Февраля", "Марта", "Апреля", "Мая", "Июня", "Июля", "Августа", "Сентября", "Октября", "Ноября",
        "Декабря"
    ];
    function showWeek(data) {
        $(".left-wrap").hide();
        $(".center-wrap")[0].style.width = "calc(100% - 197px + 40px)";
        $(".slider-places")[0].style.width = "100%";
        calendar1.selectDate(new Date());
        var date = new Date(new Date().getTime() + 24 * 60 * 60 * 1000);
        var divTodaywrap = document.createElement("div");
        var cardHead = $(".card-head");
        cardHead.children().hide();
        let now = new Date();
        cardHead.append("<div class='date-title'>" + titleArrRus[now.getDay()] + ", " + now.getDate() + " " + mounthsArrRus[now.getMonth()] + "</div>");
        for (var elem of cardHead.parent().find(".time-table")) {
            divTodaywrap.appendChild(elem);
        }
        divTodaywrap.prepend(cardHead[0]);
        divTodaywrap.style.width = "100%";
        
        

        $(".slider-card")[0].prepend($(".times:visible")[0].cloneNode(true));
        $(".slider-card")[0].appendChild(divTodaywrap);

        $(".center-wrap").find(".times:visible")[0].style.display = "none";

        for (var i = 0; i < 6; i++) {
            var mainDiv = document.createElement('div');
            var parentDiv = document.createElement('div');
            var table = $(".time-{dayWeek}".replace("{dayWeek}", titleArr[date.getDay()]))[0].cloneNode(true);
            table.style.display = "table";
            var textDay = document.createTextNode(titleArrRus[date.getDay()] + ", " + date.getDate() + " " + mounthsArrRus[date.getMonth()]);
            var textDiv = document.createElement("div");
            textDiv.classList.add("date-title");
            textDiv.appendChild(textDay);
            parentDiv.appendChild(textDiv);
            parentDiv.appendChild(table);
            mainDiv.classList.add("table-for-week");

            var leftTimes = $(".title-time-{dayWeek}".replace("{dayWeek}", titleArr[date.getDay()]))[0].cloneNode(true);
            leftTimes.style.display = "flex";
            mainDiv.style.display = "flex";
            parentDiv.style.width = "100%";

            mainDiv.appendChild(leftTimes);
            mainDiv.appendChild(parentDiv);
        
            $(".slider-places").slick('slickAdd', mainDiv);
            date = new Date(date.getTime() + 24 * 60 * 60 * 1000);


        }
        $(".slider-card")[0].style.display = "flex";
        $(".slick-prev")[0].style.left = "0px";
    }

    function filter() {
        let adder = -1;
        for (let i = 0; i < filterMemory.length; i++) {
            $(".slider-places").slick('slickRemove', filterMemory[i][1] - adder, true);
            adder++;
        }
    }

    function unfilter() {
        for (let i = 0; i < filterMemory.length; i++) {
            $(".slider-places").slick('slickAdd', filterMemory[i][0]);
        }
        filterMemory = [];
    }

    function hideWeek() {
        let today = new Date();
        let card = $(".slider-card");
        $(".center-wrap").find(".title-time-{dayWeek}".replace("{dayWeek}", titleArr[today.getDay()]))[0].style.display = "flex";

        $(".slider-card .times").remove();
        let tmp_tables = card.children().first().children().detach();
        card.children().first().remove();
        card.append(tmp_tables);
        card[0].style.display = "block";
        for (var i = 1;i<7;i++) {
            $(".slider-places").slick('slickRemove',2, true);
        }
        
        $(".card-head").children().show();
        $(".card-head").find(".date-title").remove();
        $(".left-wrap").show();
        $(".center-wrap")[0].style.width = "";
        $(".slider-places")[0].style.width = "";
    }

    $(".slider-places").slick({
        infinite: false,
        slidesToShow: 3,
        slidesToScroll: 1,

        responsive: [
            {
                breakpoint: 1199,
                settings: {
                    slidesToShow: 2,
                    slidesToScroll: 1
                }
            },
            {
                breakpoint: 840,
                settings: {
                    slidesToShow: 1,
                    slidesToScroll: 1
                }
            }
        ]
    });

    refreshSlots(new Date());

    function refreshSlots(date) {
        $(".time-table").hide();
        $(".times").hide();
        let formatted_date = date.getDate() + "-" + (date.getMonth() + 1) + "-" + date.getFullYear();
        $("[value='" + formatted_date + "']").show();
        switch (date.getDay()) {
            case 1:
                $(".title-time-mon").show();
                break;
            case 2:
                $(".title-time-tue").show();
                    break;
            case 3:
                $(".title-time-wed").show();
                    break;
            case 4:
                $(".title-time-thu").show();
                    break;
            case 5:
                $(".title-time-fri").show();
                    break;
            case 6:
                $(".title-time-sat").show();
                    break;
            case 0:
                $(".title-time-sun").show();
                    break;
        }

    }

    $(".viewDialog").on("click", function (e) {
        e.preventDefault();
        $("<div><button class='btn btn-primary btn-sm' onclick='deletebook({id})'>Да</button><button class='btn btn-secondary btn-sm' onclick='$(\".dialog\").remove();'>Нет</button></div>".replace("{id}", e.target.getAttribute("value")))
            .addClass("dialog")
            .appendTo("body")
            .dialog({
                title: "Вы уверены?",
                close: function () { $(this).remove() },
                modal: true
            });
    });

    function deletebook(id){
        $.ajax({
            type: "GET",
            url: '@Url.Action("RemoveBookingAjax", "BookingSlots")',
            data: "id=" + id,
            success: function (data) {
                if (data == "True") {
                    $("[value = {id}]".replace("{id}", id)).parent().parent().remove();
                    $(".dialog").remove();
                    alert("Бронирование отменено!");
                    location.reload();
                } else {
                    alert("Произошла ошибка, попробуйте позже");
                }
            },
            error: function () {
                alert("Произошла ошибка, попробуйте позже");
            }
        });
    }

</script>