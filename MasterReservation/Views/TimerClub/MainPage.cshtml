@using System.Web.UI.WebControls
@using MasterReservation.Models
@model object[]

@{
    Layout = null;
    ViewBag.Title = "Главная страница";
    LoginMaster modelLogin = (LoginMaster)ViewBag.LoginMaster;
}




<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title – Timer Club</title>
    <link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">

    @Styles.Render("~/Content/css-bootstrap")
    @Styles.Render("~/Content/HeaderStyles.css")
    @Styles.Render("~/Content/MainPageStyles.css")

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/jquery.maskedinput.min.js")
    @Scripts.Render("~/Scripts/MainPageScripts.js")
    @Scripts.Render("~/Scripts/jquery-ui-1.12.1.min.js")
    @Scripts.Render("~/bundles/modernizr")

    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    
    @Scripts.Render("~/Scripts/load-image.all.min.js")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/Scripts/HeaderScripts.js")

</head>
<body>
@*<div class="header">
    <div class="city-wrap">
        <img class="head-logo" src="~/Resources/svg/new-logo-color.svg">
        
    </div>

    <div class="icons-wrap">
        <span class="number"><a href="tel:+79512001144">8 951 200 11 44</a></span>
        <div class="cocialicons">
            <a href="https://www.instagram.com/timer.club/"><img src="~/Resources/img/instagram.png" alt=""></a>
            <a href="https://www.facebook.com/beauty.timer.club/"><img src="~/Resources/img/facebook.png" alt=""></a>
            <a href="https://vk.com/timer_beauty_club/"><img src="~/Resources/img/vk.png" alt=""></a>
        </div>

    </div>
</div>*@

<div id="body-wrap">
    <img class="logo" src="~/Resources/svg/new-logo-dark.svg" alt="">
    <span class="rent">Аренда мест в лучших салонах города</span>

    <div class="master">
        <span>Beauty-мастерам</span>
        <button id="register-master">Зарегистрироваться</button>
        <button id="login-master">Войти</button>
        <span>Салонам</span>
        @*<button id="register-salon">Зарегистрировать салон красоты</button>*@
        <button id="login-salon">Войти</button>
    </div>
    
    <div class="icons-wrap-mobile">

        <div class="number-mobile">
            <span class="number"><a href="tel:+79512001144">8 951 200 11 44</a></span>
        </div>

        <div class="we-are-wrap">
            <span class="we-are-text">Мы в социальных сетях:</span>
        </div>

        <div class="social-block-mobile">
            <a href="https://www.instagram.com/timer.club/"><img src="~/Resources/svg/instagram_blue.svg" class="social-mobile" alt=""></a>
            <a href="https://www.facebook.com/beauty.timer.club/"><img src="~/Resources/svg/icons-facebook-blue.svg" class="social-mobile" alt=""></a>
            <a href="https://vk.com/timer_beauty_club/"><img src="~/Resources/svg/vk-social-logotype_blue.svg" class="social-mobile" alt=""></a>
        </div>





    </div>

@*TODO 1) Сделать поле в бд для картинки*@
    @*TODO 2) Присваивать ID пользователя к имени картинки*@

    <!-- регистрация мастера -->
    <div id="overlay-modal">	</div>
    @using (Html.BeginForm("RegisterMaster", "Authentication", FormMethod.Post, new { @class = "modal-window", @id = "window-register-master" }))
    {
        <span class="modal-title">Регистрация</span>
        <div id="photo">
            <img id="pic" src="~/Resources/img/avatar-default.png">
            <input type="file" name="picField" id="picField" size="24" onchange="" alt="" />
        </div>
        <div id="fields-wrap">
            <div id="main-fields">
                
                @Html.EditorFor(model => (model[1] as RegisterMasterModel).Name, new {htmlAttributes = new {@class = "field", PlaceHolder = "Имя*"}})
                @Html.EditorFor(model => (model[1] as RegisterMasterModel).Surname, new {htmlAttributes = new {@class = "field", PlaceHolder = "Фамилия*"}})
                @Html.EditorFor(model => (model[1] as RegisterMasterModel).Patronymic, new {htmlAttributes = new {@class = "field", PlaceHolder = "Отчество"}})
                @Html.EditorFor(model => (model[1] as RegisterMasterModel).Email, new {htmlAttributes = new {@class = "field", PlaceHolder = "E-mail*"}})
                @Html.EditorFor(model => (model[1] as RegisterMasterModel).PhoneNumber, new {htmlAttributes = new {@class = "field phone-mask", PlaceHolder = "Номер Телефона*"}})
                @Html.EditorFor(model => (model[1] as RegisterMasterModel).City, new {htmlAttributes = new {@class = "field", PlaceHolder = "Город*"}})
            </div>

            <div id="offers-container">
                <span id="offers-title">Предоставляемые услуги</span>
                @Html.EditorFor(model => (model[1] as RegisterMasterModel).Offers, new { htmlAttributes = new { @id = "hiddenInput", @style = "width:0px;height:0px;opacity:0;" } })
                <div id="offers-wrap">
                </div>
            </div>

            <div class="sub-fields">
                <div id="input-offers-wrap">
                    <input class="field" id="input-offers" type="text" autocomplete="off" placeholder="Предоставляемые услуги">
                    <img src="~/Resources/svg/down-arrow.svg">
                    <div id="itemss" class="dropdown-menu">
                        <div><span>Парикмахерские услуги</span></div>
                        <div><span>Маникюр</span></div>
                        <div><span>Педикюр</span></div>
                        <div><span>Массаж</span></div>
                        <div><span>Визаж</span></div>
                        <div><span>Шугаринг</span></div>
                        <div><span>Оформление бровей</span></div>
                        <div><span>Наращивание ресниц</span></div>
                        <div><span>Перманентный макияж</span></div>
                        <div><span>Косметологические услуги</span></div>
                    </div>
                </div>
                @*@Html.EditorFor(model => (model[1] as RegisterMasterModel).Expirience, new { htmlAttributes = new { @class = "field", placeholder = "Стаж работы" } })*@
            </div>
            <div class="sub-fields">
                @Html.EditorFor(model => (model[1] as RegisterMasterModel).Awards, new { htmlAttributes = new { @class = "field", PlaceHolder = "Имеющиеся награды", @id = "rewards" } })
            </div>

            <div id="pass-wrap">
                @Html.EditorFor(model => (model[1] as RegisterMasterModel).Password, new { htmlAttributes = new { @class = "field", PlaceHolder = "Пароль*" } })
                @Html.EditorFor(model => (model[1] as RegisterMasterModel).SumbitPassword, new { htmlAttributes = new { @class = "field", PlaceHolder = "Повторите пароль" } })
            </div>
            <div id="checkbox-wrap">
                @Html.EditorFor(model=>(model[1]  as RegisterMasterModel).ProcessData, new{htmlAttributes = new{ id= "process-personal-data" } })
                <label for="process-personal-data">Согласен на обработку персональных данных</label>
            </div>
            @{
                if (ViewBag.wrongMessage != null)
                {
                    <span class="messageerror">@ViewBag.wrongMessage</span>
                }
            }
            @Html.ValidationMessageFor(model => (model[1] as RegisterMasterModel).Name, null, new { @class = "messageerror" })
            @Html.ValidationMessageFor(model => (model[1] as RegisterMasterModel).Surname, null, new { @class = "messageerror" })
            @Html.ValidationMessageFor(model => (model[1] as RegisterMasterModel).Patronymic, null, new { @class = "messageerror" })
            @Html.ValidationMessageFor(model => (model[1] as RegisterMasterModel).Email, null, new { @class = "messageerror" })
            @Html.ValidationMessageFor(model => (model[1] as RegisterMasterModel).PhoneNumber, null, new { @class = "messageerror" })
            @Html.ValidationMessageFor(model => (model[1] as RegisterMasterModel).City, null, new { @class = "messageerror" })
            @Html.ValidationMessageFor(model => (model[1] as RegisterMasterModel).Offers, null, new { @class = "messageerror" })
            @Html.ValidationMessageFor(model => (model[1] as RegisterMasterModel).Expirience, null, new { @class = "messageerror" })
            @Html.ValidationMessageFor(model => (model[1] as RegisterMasterModel).Awards, null, new { @class = "messageerror" })
            @Html.ValidationMessageFor(model => (model[1] as RegisterMasterModel).Password, null, new { @class = "messageerror" })
            @Html.ValidationMessageFor(model => (model[1] as RegisterMasterModel).SumbitPassword, null, new { @class = "messageerror" })
            @Html.ValidationMessageFor(model => (model[1] as RegisterMasterModel).ProcessData, null, new { @class = "messageerror" })

            <button class="send-button">Зарегистрироваться</button>
        </div>

        <div class="close-modal">
            <img src="~/Resources/img/close-modal.png">
        </div>

    }


    <!-- вход лля мастера -->

    @using (Html.BeginForm("LoginMaster", "Authentication", FormMethod.Post, new { @class = "modal-window", @id = "window-login-master" }))
    {
        <span class="modal-title">Вход</span>


        <div id="login-wrap">
            @Html.EditorFor(model => (model[0] as LoginMaster).Email, new { htmlAttributes = new { @class = "field", id = "loginemail", PlaceHolder = "Email" } })
            @Html.EditorFor(model => (model[0] as LoginMaster).Password, new { htmlAttributes = new { @class = "field", id = "loginpass", PlaceHolder = "Пароль" } })
        </div>

        <button class="send-button" id="login-button">Войти</button>


        <div class="close-modal">
            <img src="~/Resources/img/close-modal.png">
        </div>
    }



    <!--TODO 1) Прикрутить регистрацию салона-->
    @*TODO 2) Сделать отправку заявки на мыло*@

    @using (Html.BeginForm("SendRequestRegisterSalon", "Authentication", FormMethod.Post, new { @class = "modal-window", @id = "window-register-salon" }))
    {
        <!-- регистрация салона -->

        <span id="adaptive-title" class="modal-title">Отправление заявки на добавление салона красоты в систему Timer Club</span>


        <div id="form-request">
            <div id="top-inputs">
                @Html.EditorFor(model => (model[2] as RegisterSalonModel).Name, new { htmlAttributes = new { @class = "field", PlaceHolder = "Имя контактного лица*", id = "SendCont" } })
                @Html.EditorFor(model => (model[2] as RegisterSalonModel).Phone, new { htmlAttributes = new { @class = "field phone-mask", PlaceHolder = "Номер телефона*", id = "SendPhone" } })
                @Html.EditorFor(model => (model[2] as RegisterSalonModel).Email, new { htmlAttributes = new { @class = "field", PlaceHolder = "Email", id = "SendMail" } })
                @Html.EditorFor(model => (model[2] as RegisterSalonModel).City, new { htmlAttributes = new { @class = "field", PlaceHolder = "Город*", id = "SendCity" } })
                

            </div>
            
            @Html.TextAreaFor(model => (model[2] as RegisterSalonModel).Information, new {@class = "field", PlaceHolder = "Дополнительная информация*", id = "additional-info" })

        </div>
        <div class="error-message">
            @Html.ValidationMessageFor(model => (model[2] as RegisterSalonModel).Name, null, new { @class = "messageerror" })
            @Html.ValidationMessageFor(model => (model[2] as RegisterSalonModel).Phone, null, new { @class = "messageerror" })
            @Html.ValidationMessageFor(model => (model[2] as RegisterSalonModel).Email, null, new { @class = "messageerror" })
            @Html.ValidationMessageFor(model => (model[2] as RegisterSalonModel).City, null, new { @class = "messageerror" })
        </div>
        <button class="send-button" id="login-button">Отправить заявку</button>


        <div class="close-modal">
            <img src="~/Resources/img/close-modal.png">
        </div>

    }

<!-- вход лля администратора салона -->

    @using (Html.BeginForm("LoginSalon", "Authentication", FormMethod.Post, new { @class = "modal-window", @id = "window-login-salon" }))
    {
        <span class="modal-title">Вход</span>


        <div id="login-wrap">
            @Html.EditorFor(model => (model[0] as LoginMaster).Email, new { htmlAttributes = new { @class = "field", id = "loginemail", PlaceHolder = "Email" } })
            @Html.EditorFor(model => (model[0] as LoginMaster).Password, new { htmlAttributes = new { @class = "field", id = "loginpass", PlaceHolder = "Пароль" } })


        </div>

        <button class="send-button" id="login-button">Войти</button>


        <div class="close-modal">
            <img src="~/Resources/img/close-modal.png">
        </div>
    }
    </div>
<div id="hidden-offers">
    <div>Парикмахерские услуги</div>
    <div>Маникюр</div>
    <div>Педикюр</div>
    <div>Массаж</div>
    <div>Визаж</div>
    <div>Шугаринг</div>
    <div>Оформление бровей</div>
    <div>Наращивание ресниц</div>
    <div>Перманентный макияж</div>
    <div>Косметологические услуги</div>
    </div>

    <script>$(".phone-mask").mask("+7(999)9999999");</script>
    
</body>
</html>