@using System.Web.UI.WebControls
@using MasterReservation.Models
@model object[]

@{
    ViewBag.Title = "Главная страница";
    LoginMaster modelLogin = (LoginMaster)ViewBag.LoginMaster;
}

@Styles.Render("~/Content/MainPageStyles.css")
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/Scripts/MainPageScripts.js")
@Scripts.Render("~/Scripts/jquery-ui-1.12.1.min.js")

<div class="header">
    <div class="city-wrap">
        <span class="town">Город</span>

        <div class="dropdown">
            <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Москва
            </button>
            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="dropdown-item" href="#">Питер</a>
                <a class="dropdown-item" href="#">Ижевск</a>
                <a class="dropdown-item" href="#">Казань</a>
            </div>
        </div>
    </div>
    <div class="icons-wrap">
        <span class="number"><a href="tel:+79198534241">8 919 853 42 41</a></span>
        <div class="cocialicons">
            <a href="#"><img src="~/Resources/img/instagram.png" alt=""></a>
            <a href="#"><img src="~/Resources/img/facebook.png" alt=""></a>
            <a href="#"><img src="~/Resources/img/vk.png" alt=""></a>
        </div>
    </div>
</div>
<div id="body-wrap">
    <img class="logo" src="~/Resources/svg/logo.svg" alt="">
    <span class="rent">Аренда мест в лучших салонах города</span>

    <div class="master">
        <span>Beauty-мастерам</span>
        <button id="register-master">Зарегистрироваться</button>
        <button id="login-master">Войти</button>
        <span>Салонам</span>
        <button id="register-salon">Зарегистрировать салон красоты</button>
    </div>
</div>

@*TODO 1) Сделать поле в бд для картинки*@ 
@*TODO 2) Присваивать ID пользователя к имени картинки*@

<!-- регистрация мастера -->
<div id="overlay-modal">	</div>
@using (Html.BeginForm("RegisterMaster", "Authentication", FormMethod.Post, new { @class = "modal-window", @id = "window-register-master" }))
{
    <span class="modal-title">Регистрация</span>
    <div id="photo">
        <img id="pic" src="~/Resources/img/avatar-default.png">
        <input type="file" name="picField" id="picField" size="24" onchange="" alt="" />
    </div>
    <div id="fields-wrap">
        <div id="main-fields">
            @Html.EditorFor(model => (model[1] as RegisterMasterModel).Name, new { htmlAttributes = new { @class = "field", PlaceHolder = "Имя*" } })
            @Html.EditorFor(model => (model[1] as RegisterMasterModel).Surname, new { htmlAttributes = new { @class = "field", PlaceHolder = "Фамилия*" } })
            @Html.EditorFor(model => (model[1] as RegisterMasterModel).Patronymic, new { htmlAttributes = new { @class = "field", PlaceHolder = "Отчество" } })
            @Html.EditorFor(model => (model[1] as RegisterMasterModel).Email, new { htmlAttributes = new { @class = "field", PlaceHolder = "E-mail*" } })
            @Html.EditorFor(model => (model[1] as RegisterMasterModel).PhoneNumber, new { htmlAttributes = new { @class = "field", PlaceHolder = "Номер Телефона*" } })
            @Html.EditorFor(model => (model[1] as RegisterMasterModel).City, new { htmlAttributes = new { @class = "field", PlaceHolder = "Город*" } })
        </div>

        <div id="offers-container">
            <span id="offers-title">Предоставляемые услуги</span>
            @Html.EditorFor(model => (model[1] as RegisterMasterModel).Offers, new { htmlAttributes = new { @id = "hiddenInput", @style = "width:0px;height:0px;opacity:0;" } })
            <div id="offers-wrap">
            </div>
        </div>

        <div id="sub-fields">
            <div id="input-offers-wrap">
                <input class="field" id="input-offers" type="text" autocomplete="off" placeholder="Предоставляемые услуги">
                <img src="~/Resources/svg/down-arrow.svg">
                <div id="itemss" class="dropdown-menu">
                    <div><span>Парикмахерские услуги</span></div>
                    <div><span>Педикюр</span></div>
                    <div><span>Массаж</span></div>
                    <div><span>Визаж</span></div>
                    <div><span>Шугаринг</span></div>
                </div>
            </div>
            @Html.EditorFor(model => (model[1] as RegisterMasterModel).Expirience, new { htmlAttributes = new { @class = "field", placeholder = "Стаж работы" } })
        </div>
        @Html.EditorFor(model => (model[1] as RegisterMasterModel).Awards, new { htmlAttributes = new { @class = "field", PlaceHolder = "Имеющиеся награды", @id = "rewards" } })

        <div id="pass-wrap">
            @Html.EditorFor(model => (model[1] as RegisterMasterModel).Password, new { htmlAttributes = new { @class = "field", PlaceHolder = "Пароль*" } })
            @Html.EditorFor(model => (model[1] as RegisterMasterModel).SumbitPassword, new { htmlAttributes = new { @class = "field", PlaceHolder = "Повторите пароль" } })
        </div>
        <div id="checkbox-wrap">
            <input type="checkbox" id="process-personal-data">
            <label for="process-personal-data">Согласен на обработку персональных данных</label>
        </div>

        @Html.ValidationMessageFor(model => (model[1] as RegisterMasterModel).Name, null, new { @class = "messageerror" })
        @Html.ValidationMessageFor(model => (model[1] as RegisterMasterModel).Surname, null, new { @class = "messageerror" })
        @Html.ValidationMessageFor(model => (model[1] as RegisterMasterModel).Patronymic, null, new { @class = "messageerror" })
        @Html.ValidationMessageFor(model => (model[1] as RegisterMasterModel).Email, null, new { @class = "messageerror" })
        @Html.ValidationMessageFor(model => (model[1] as RegisterMasterModel).PhoneNumber, null, new { @class = "messageerror" })
        @Html.ValidationMessageFor(model => (model[1] as RegisterMasterModel).City, null, new { @class = "messageerror" })
        @Html.ValidationMessageFor(model => (model[1] as RegisterMasterModel).Offers, null, new { @class = "messageerror" })
        @Html.ValidationMessageFor(model => (model[1] as RegisterMasterModel).Expirience, null, new { @class = "messageerror" })
        @Html.ValidationMessageFor(model => (model[1] as RegisterMasterModel).Awards, null, new { @class = "messageerror" })
        @Html.ValidationMessageFor(model => (model[1] as RegisterMasterModel).Password, null, new { @class = "messageerror" })
        @Html.ValidationMessageFor(model => (model[1] as RegisterMasterModel).SumbitPassword, null, new { @class = "messageerror" })

        <button class="send-button">Зарегистрироваться</button>
    </div>

    <div class="close-modal">
        <img src="~/Resources/img/close-modal.png">
    </div>

}


<!-- вход лля мастера -->

    @using (Html.BeginForm("LoginMaster", "Authentication", FormMethod.Post, new { @class = "modal-window", @id = "window-login-master" }))
    {
        <span class="modal-title">Вход</span>


        <div id="login-wrap">
            @Html.EditorFor(model => (model[0] as LoginMaster).Email, new { htmlAttributes = new { @class = "field",id="loginemail", PlaceHolder = "Email" } })
            @Html.EditorFor(model => (model[0] as LoginMaster).Password, new { htmlAttributes = new { @class = "field",id="loginpass", PlaceHolder = "Пароль" } })
          

        </div>

        <button class="send-button" id="login-button">Войти</button>


        <div class="close-modal">
            <img src="~/Resources/img/close-modal.png">
        </div>
    }



<!--TODO 1) Прикрутить регистрацию салона-->
@*TODO 2) Сделать отправку заявки на мыло*@

@using (Html.BeginForm("RegisterSalon", "Authentication", FormMethod.Post, new {@class = "modal-window", @id = "window-register-salon"}))
{
    <!-- регистрация салона -->

        <span id="adaptive-title" class="modal-title">Отправление заявки на добавление салона красоты в систему Timer Club</span>


        <div id="form-request">
            <div id="top-inputs">
                @Html.EditorFor(model => (model[2] as RegisterSalonModel).Name, new {htmlAttributes = new {@class = "field", PlaceHolder = "Имя контактного лица*", id="SendCont"}})
                @Html.EditorFor(model => (model[2] as RegisterSalonModel).Phone, new {htmlAttributes = new {@class = "field", PlaceHolder = "Номер телефона*", id="SendPhone"}})
                @Html.EditorFor(model => (model[2] as RegisterSalonModel).Email, new {htmlAttributes = new {@class = "field", PlaceHolder = "Email", id="SendMail"}})
                @Html.EditorFor(model => (model[2] as RegisterSalonModel).City, new {htmlAttributes = new {@class = "field", PlaceHolder = "Город*", id="SendCity"}})

            </div>
            @Html.EditorFor(model => (model[2] as RegisterSalonModel).Information, new {htmlAttributes = new {@class = "field", PlaceHolder = "Дополнительная информация*", id="additional-info"}})
          
        </div>

        <button class="send-button" id="login-button">Отправить заявку</button>


        <div class="close-modal">
            <img src="~/Resources/img/close-modal.png">
        </div>

}

<div id="hidden-offers">
    <div>Парикмахерские услуги</div>
    <div>Педикюр</div>
    <div>Массаж</div>
    <div>Визаж</div>
    <div>Шугаринг</div>
</div>


