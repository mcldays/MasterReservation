@using MasterReservation.Models
@model object[]

@{
    ViewBag.Title = "Управление рабочими местами";
}

@*@Scripts.Render("~/Scripts/jquery.maskedinput.min.js")*@

@Scripts.Render("~/bundles/jqueryval")

@Styles.Render("~/Content/SalonPlacesStyles.css")

<button class="btn btn-light" onclick="document.location='../../Admin/SalonShow'">Назад</button>
<span class="bold-text">Салон</span>
<span class="salon-title">@ViewBag.SalonTitle</span>
@if (@ViewBag.ErrorMessage != null)
{
    <span class="error-message">@ViewBag.ErrorMessage</span>
}
@if ((Model[0] as List<WorkingPlaceModel>).Count == 0)
{
    <span class="info-message">У этого салона пока нет рабочих мест</span>
}
<div class="table-wrap" style="max-height: 500px; overflow-y: scroll;">
    <table class="table">
        <thead class="thead-light">
            <tr>
                <th><span class="thead-span">Id</span></th>
                <th><span class="thead-span">Перечень услуг*</span></th>
                <th><span class="thead-span">Цена часа, руб*</span></th>
                <th><span class="thead-span">Цена от 3х часов, руб*</span></th>
                <th><span class="thead-span">Цена смены, руб*</span></th>
                <th><span class="thead-span">Тип места*</span></th>
                <th><span class="thead-span">Доп. условия</span></th>
                <th><span class="thead-span">Описание</span></th>
                <th><span class="thead-span">Управление местом</span></th>
            </tr>
        </thead>
        <tbody>

        @if ((Model[0] as List<WorkingPlaceModel>).Count != 0)
        {
            foreach (var model in (Model[0] as List<WorkingPlaceModel>))
            {
                <tr>
                    <td>@(model.Id)</td>
                    <td>@(model.Offers)</td>
                    <td>@(model.Rate1h)</td>
                    <td>@(model.Rate3h)</td>
                    <td>@(model.RateDay)</td>
                    <td>@(model.PlaceType)</td>
                    <td>@(model.AdditionalConditions)</td>
                    <td>@(model.Description)</td>
                    <td>
                        <button class="btn btn-secondary salon-go-btn" value="@(model.Id)">Перейти</button>
                        <br/>
                        <button class="btn btn-danger salon-mng-btn" value="@(model.Id)">Удалить</button>
                    </td>
                </tr>
            }
        }

        <tr class="new-record">
            @using (Html.BeginForm("AddWorkingPlace", "Admin", FormMethod.Post, new {}))
            {
                @Html.HiddenFor((model => (Model[1] as WorkingPlaceModel).SalonId))
                <td>*</td>
                    @*<td>@Html.EditorFor((model => (Model[1] as WorkingPlaceModel).Offers))</td>*@
                <td>
                    @Html.ValidationMessageFor(model => (Model[1] as WorkingPlaceModel).Offers, null, new {@class = "WrongData"})
                    <div class="offers-dropdown">
                        <div class="offers-selected-wrap">
                            <span class="offers-selected">Услуги</span>
                            <img src="~/Resources/svg/gray-arrow.svg" class="offers-arrow">
                        </div>
                        <div class="offers-options">
                            <div class="dropdown-option">Парикмахерские услуги</div>
                            <div class="dropdown-option">Маникюр</div>
                            <div class="dropdown-option">Педикюр</div>
                            <div class="dropdown-option">Массаж</div>
                            <div class="dropdown-option">Визаж</div>
                            <div class="dropdown-option">Шугаринг</div>
                            <div class="dropdown-option">Оформление бровей</div>
                            <div class="dropdown-option">Наращивание ресниц</div>
                            <div class="dropdown-option">Перманентный макияж</div>
                            <div class="dropdown-option">Косметологические услуги</div>
                        </div>
                        <!-- инпут для услуг -->
                        @*<input type="text" class="hidden-input" id="input-for-offers"/>*@
                        @Html.EditorFor(model => (model[1] as WorkingPlaceModel).Offers, new {htmlAttributes = new {@id = "input-for-offers", @class = "hidden-input"}})
                    </div>
                </td>



                <td>
                    @Html.ValidationMessageFor(model => (Model[1] as WorkingPlaceModel).Rate1h, null, new {@class = "WrongData"})
                    @Html.EditorFor((model => (Model[1] as WorkingPlaceModel).Rate1h), new {htmlAttributes = new {placeholder = "Цена одного часа, руб", @class = "field double-input"}})
                </td>
                <td>
                    @Html.ValidationMessageFor(model => (Model[1] as WorkingPlaceModel).Rate3h, null, new {@class = "WrongData"})
                    @Html.EditorFor((model => (Model[1] as WorkingPlaceModel).Rate3h), new {htmlAttributes = new {placeholder = "Цена от 3х часов, руб", @class = "field double-input"}})
                </td>
                <td>
                    @Html.ValidationMessageFor(model => (Model[1] as WorkingPlaceModel).RateDay, null, new {@class = "WrongData"})
                    @Html.EditorFor((model => (Model[1] as WorkingPlaceModel).RateDay), new {htmlAttributes = new {placeholder = "Цена одной смены, руб", @class = "field double-input"}})
                </td>
                    @*<td>@Html.EditorFor((model => (Model[1] as WorkingPlaceModel).PlaceType))</td>*@

                <td>
                    @Html.ValidationMessageFor(model => (Model[1] as WorkingPlaceModel).PlaceType, null, new {@class = "WrongData"})
                    <div class="offers-dropdown">
                        <div class="offers-selected-wrap">
                            <span class="offers-selected">Тип места</span>
                            <img src="~/Resources/svg/gray-arrow.svg" class="offers-arrow">
                        </div>
                        <div class="offers-options">
                            <div class="dropdown-option one-select">Отдельный кабинет</div>
                            <div class="dropdown-option one-select">Общее пространство</div>
                        </div>
                        <!-- инпут для услуг -->
                        @*<input type="text" class="hidden-input" id="input-for-offers"/>*@
                        @Html.EditorFor(model => (model[1] as WorkingPlaceModel).PlaceType, new {htmlAttributes = new {@class = "hidden-input"}})
                    </div>
                </td>


                    @*<td>@Html.EditorFor((model => (Model[1] as WorkingPlaceModel).AdditionalConditions))</td>*@

                <td>
                    @Html.ValidationMessageFor(model => (Model[1] as WorkingPlaceModel).AdditionalConditions, null, new {@class = "WrongData"})
                    <div class="offers-dropdown">
                        <div class="offers-selected-wrap">
                            <span class="offers-selected">Доп. условия</span>
                            <img src="~/Resources/svg/gray-arrow.svg" class="offers-arrow">
                        </div>
                        <div class="offers-options">
                            <div class="dropdown-option">Бесплатный чай/ кофе</div>
                            <div class="dropdown-option">Расходные материалы</div>
                            <div class="dropdown-option">Камера хранения</div>
                            <div class="dropdown-option">Парковка</div>
                            <div class="dropdown-option">Комната отдыха</div>
                            <div class="dropdown-option">Детская комната</div>
                        </div>
                        <!-- инпут для услуг -->
                        @*<input type="text" class="hidden-input" id="input-for-offers"/>*@
                        @Html.EditorFor(model => (model[1] as WorkingPlaceModel).AdditionalConditions, new {htmlAttributes = new {@class = "hidden-input"}})
                    </div>
                </td>


                <td>
                    @Html.ValidationMessageFor(model => (Model[1] as WorkingPlaceModel).Description, null, new {@class = "WrongData"})
                    @Html.TextAreaFor((model => (Model[1] as WorkingPlaceModel).Description), new {placeholder = "Описание", @class = "field"})
                </td>
                <td><button class="btn btn-primary">Добавить</button></td>
            }
        </tr>
        </tbody>
    </table>

</div>


<script>
    $(".salon-mng-btn").on("click", function (e) {
        $.ajax({
            type: "GET",
            url: "../../Admin/RemoveWorkingPlace",
            data: "placeId=" + $(this).val(),
            success: function (data) {
                $(e.target).parent().parent().remove();
                alert(data);
            },
            error: function () {
                alert("Произошла ошибка, попробуйте позже");
            }
        });
    });

    $(".salon-go-btn").on("click", function() {
        document.location = "../../TimerClub/WorkingPlacePage/" + $(this).val();
    });

    //дропдовны
    $(".offers-selected-wrap").on("click", function () {
        if ($(this).next().is(":visible")) {
            $(this).next().slideUp('300');
        }
        else {
            $(this).next().slideDown('300');
        }
    });

    $(document).on("click", function (e) {
        var div = $(".offers-options");
        if (!div.is(e.target) && div.has(e.target).length === 0 && !$(".offers-selected-wrap").is(e.target) && $(".offers-selected-wrap").has(e.target).length === 0) {
            console.log(div.has(e.target));
            console.log($(".offers-selected-wrap").is(e.target));
            div.slideUp(300);
        }
    });

    $(".dropdown-option").on("click", function () {
        var value_input = $(this).parent().parent().find(".hidden-input").val();
        if ($(this).is(".active-option")) {
            if ($(this).is(".one-select")) {
                $(this).parent().parent().find(".hidden-input").val("");
                $(this).removeClass("active-option");
            } else {
                $(this).removeClass("active-option");
                $(this).parent().parent().find(".hidden-input").val(value_input.replace(this.innerText + ",", ""));
            }

        }
        else {
            if ($(this).is(".one-select")) {
                $(this).parent().find(".active-option").removeClass("active-option");
                $(this).parent().parent().find(".hidden-input").val(this.innerText);
                $(this).addClass("active-option");
            } else {
                $(this).addClass("active-option");
                $(this).parent().parent().find(".hidden-input").val(value_input + this.innerText + ",");
            }

        }

        // $(this).parent().prev().find($("span")).text(this.innerText);
        // $(this).parent().slideUp('300');
    });

</script>








