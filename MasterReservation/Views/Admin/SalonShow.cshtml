@using MasterReservation.Models
@model object[]
@{
    ViewBag.Title = "Список салонов";
}

@Scripts.Render("~/Scripts/jquery.maskedinput.min.js")
@Scripts.Render("~/Scripts/jquery-ui-1.12.1.min.js")
@Scripts.Render("~/bundles/jqueryval")

@Styles.Render("~/Content/SalonPlacesStyles.css")

@if (@ViewBag.ErrorMessage != null)
{
    <span class="error-message">@ViewBag.ErrorMessage</span>
}
@if ((Model[0] as List<SalonModel>) == null)
{
    <span class="info-message">Салонов пока нет</span>
}

<div class="table-wrap" style="max-height: 500px; overflow-y: scroll;">
    <table class="table">
        <thead class="thead-light">
            <tr>
                <th>Id</th>
                <th>Название салона*</th>
                <th>Контактное лицо*</th>
                <th>Телефон администратора*</th>
                <th>Город</th>
                <th>Email*</th>
                @*<th>Сообщение</th>*@
                <th>Адрес</th>
                <th>Пн</th>
                <th>Вт</th>
                <th>Ср</th>
                <th>Чт</th>
                <th>Пт</th>
                <th>Сб</th>
                <th>Тип бронирования</th>
                <th>Пароль администратора</th>
                <th>Управление салоном</th>
            </tr>
        </thead>
        <tbody>
            
            @if((Model[0] as List<SalonModel>) != null)
            {
                foreach (var model in (Model[0] as List<SalonModel>))
                {

                    <tr>
                        <td>@(model.Id)</td>
                        <td>@(model.SalonTitle)</td>
                        <td>@(model.ContactPerson)</td>
                        <td>@(model.Phone)</td>
                        <td>@(model.City)</td>
                        <td>@(model.Email)</td>
                        @*<td>@(model.Message)</td>*@
                        <td>@(model.Adress)</td>
                        <td>@(model.OperatingModeMon)</td>
                        <td>@(model.OperatingModeTue)</td>
                        <td>@(model.OperatingModeWed)</td>
                        <td>@(model.OperatingModeThu)</td>
                        <td>@(model.OperatingModeFri)</td>
                        <td>@(model.OperatingModeSat)</td>
                        <td>
                            @if (model.ReservationType)
                            {
                                @: С бронированием
                            }
                            else
                            {
                                @: Без бронирования
                            }

                        </td>
                        <td>@(model.AdminPass)</td>
                        <td><button class="btn btn-secondary salon-mng-btn" value="@(model.Id)">Перейти</button><button class="btn btn-danger salon-dlt-btn" value="@(model.Id)">Удалить</button></td>
                    </tr>

                }
            }
            <tr>
                @using (Html.BeginForm("AddSalon", "Admin", FormMethod.Post, new { }))
                {
                    @Html.HiddenFor((model => (Model[1] as SalonModel).Id))
                    <td>*</td>
                    <td>@Html.EditorFor(model => (Model[1] as SalonModel).SalonTitle, new { htmlAttributes = new { @class = "field", placeholder = "Название салона" } })</td>
                    <td>@Html.EditorFor(model => (Model[1] as SalonModel).ContactPerson, new { htmlAttributes = new { @class = "field", placeholder = "Контактное лицо" } })</td>
                    <td>@Html.EditorFor(model => (Model[1] as SalonModel).Phone, new { htmlAttributes = new { @class = "field phone-mask", placeholder = "Номер телефона" } })</td>
                    <td>@Html.EditorFor(model => (Model[1] as SalonModel).City, new { htmlAttributes = new { @class = "field", id = "city-input", placeholder = "Город" } })</td>
                    <td>@Html.EditorFor(model => (Model[1] as SalonModel).Email, new { htmlAttributes = new { @class = "field", placeholder = "Email" } })</td>
                    @*<td>@Html.TextAreaFor(model => (Model[1] as SalonModel).Message, new { @class = "field", placeholder = "Сообщение" })</td>*@
                    <td>@Html.EditorFor(model => (Model[1] as SalonModel).Adress, new { htmlAttributes = new { @class = "field", placeholder = "Адрес" } })</td>
                    <td class="times-width">@Html.EditorFor(model => (Model[1] as SalonModel).OperatingModeMon, new { htmlAttributes = new { @class = "field mode-mask", placeholder = "Пн" } })</td>
                    <td class="times-width">@Html.EditorFor(model => (Model[1] as SalonModel).OperatingModeTue, new { htmlAttributes = new { @class = "field mode-mask", placeholder = "Вт" } })</td>
                    <td class="times-width">@Html.EditorFor(model => (Model[1] as SalonModel).OperatingModeWed, new { htmlAttributes = new { @class = "field mode-mask", placeholder = "Ср" } })</td>
                    <td class="times-width">@Html.EditorFor(model => (Model[1] as SalonModel).OperatingModeThu, new { htmlAttributes = new { @class = "field mode-mask", placeholder = "Чт" } })</td>
                    <td class="times-width">@Html.EditorFor(model => (Model[1] as SalonModel).OperatingModeFri, new { htmlAttributes = new { @class = "field mode-mask", placeholder = "Пт" } })</td>
                    <td class="times-width">@Html.EditorFor(model => (Model[1] as SalonModel).OperatingModeSat, new { htmlAttributes = new { @class = "field mode-mask", placeholder = "Сб" } })</td>
                    <td>@Html.EditorFor(model => (Model[1] as SalonModel).ReservationType, new { htmlAttributes = new { id = "checkbox" } })</td>
                    <td>@Html.EditorFor(model => (Model[1] as SalonModel).AdminPass, new { htmlAttributes = new { @class="field" } })</td>
                    <td><button class="btn btn-primary">Добавить</button></td>
                }
            </tr>
        </tbody>
    </table>

</div>

<script>
    $(".salon-mng-btn").on("click", function () {
        document.location = "../../Admin/SalonPlaces/" + $(this).val();
    });

    $(".phone-mask").mask("+7(999)9999999");

    $(".mode-mask").mask(
        "99:99-99:99",
        {
            placeholder: "_",
            completed: function() {
                var subVal = $(this).val().split('-');
                var val1 = subVal[0].split(':');
                var val2 = subVal[1].split(':');
                if ( val1[0]*1 > 23) val1[0] = '23';
                val1[1] = '00';
                if (val2[0] * 1 > 23) val2[0] = '23';
                val2[1] = '00';
                $(this).val( val1.join(':') + "-" + val2.join(':') );
                $(this).next(':input').focus();
            }
        }
    );



    $("#city-input").each(function () {
        $(this).autocomplete({
            source: '/Authentication/GetCities'
        });
    });


    $(".salon-dlt-btn").on("click", function (e) {
        $.ajax({
            type: "GET",
            url: "../../Admin/RemoveSalon",
            data: "salonId=" + $(this).val(),
            success: function (data) {
                $(e.target).parent().parent().remove();
                alert(data);
            },
            error: function () {
                alert("Произошла ошибка, попробуйте позже");
            }
        });
    });
</script>